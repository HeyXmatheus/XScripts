-- Carregar biblioteca
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Aviso ao executar
Fluent:Notify({ Title = "executado!", Content = "executando com sucesso" })

local Window = Fluent:CreateWindow({
    Title = "XScript universal" .. Fluent.Version,
    TabWidth = 160, 
    Size = UDim2.fromOffset(580, 460), 
    Theme = "Amethyst"
})

local Tabs = {
    Main = Window:AddTab({ Title = "inicio" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Parágrafos 
Tabs.Main:AddParagraph({ Title = "XScript", Content = "versao beta" })

-- Botões 
Tabs.Main:AddButton({ Title = "pulo infinito", Callback = function() 
    loadstring(game:HttpGet("https://raw.githubusercontent.com/HeyGyt/infjump/main/main"))()
end })

Tabs.Main:AddButton({ Title = "Fly gui", Callback = function() 
    loadstring(game:HttpGet('https://raw.githubusercontent.com/HeyXmatheus/XScripts/refs/heads/main/fly'))()
end })

Tabs.Main:AddButton({ Title = "Fling gui", Callback = function() 
    loadstring(game:HttpGet('https://raw.githubusercontent.com/HeyXmatheus/XScripts/refs/heads/main/fling'))()
end })

-- Alterador 
local player = game.Players.LocalPlayer
local noclip = false

-- Função para alternar o estado do noclip
local function toggleNoclip(state)
    noclip = state
    if noclip then
        -- Desativar colisões
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        print("Noclip ativado")
    else
        -- Ativar colisões
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
        print("Noclip desativado")
    end
end

-- Função para monitorar continuamente o estado do noclip
local function monitorNoclip()
    while true do
        if noclip then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
        wait(0.1) -- Ajuste o intervalo conforme necessário
    end
end

-- Iniciar a monitorização do noclip em uma nova thread
spawn(monitorNoclip)

local Toggle = Tabs.Main:AddToggle("noclip", 
{
    Title = "noclip", 
    Description = "Ativa ou desativa o noclip",
    Default = false, 
    Callback = function(state)
        toggleNoclip(state)
        if state then
            print("Noclip ativado")
        else
            print("Noclip desativado")
        end
    end 
})

-- Sliders
local Slider = Tabs.Main:AddSlider("pulo", 
{
    Title = "ajusta pulo",
    Description = "irá mudar pulo jogador",
    Default = 2,
    Min = 0,
    Max = 5,
    Rounding = 1,
    Callback = function(Value)
        print("pulo mudou pra:", Value)
    end
})

local Slider = Tabs.Main:AddSlider("velocidade", 
{
    Title = "Velocidade",
    Description = "Ajusta a velocidade do jogador",
    Default = 2,
    Min = 0,
    Max = 5,
    Rounding = 1,
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        
        -- Define a velocidade de caminhada
        humanoid.WalkSpeed = Value * 10  -- Multiplica o valor para aumentar o impacto
    end
})

-- Função para minimizar e reabrir a interface
local frame = Window:GetFrame()
local minimizeButton = frame:WaitForChild("MinimizeButton")
local reopenButton = Window:AddButton({
    Title = "Reabrir",
    Callback = function()
        frame.Visible = true
        reopenButton.Visible = false
    end
})
reopenButton.Visible = false

minimizeButton.MouseButton1Click:Connect(function()
    frame.Visible = false
    reopenButton.Visible = true
end)
