-- Carregar biblioteca Fluent
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Aviso ao executar
Fluent:Notify({ Title = "Executado!", Content = "Executando com sucesso" })

-- Criar janela principal
local Window = Fluent:CreateWindow({
    Title = "XScript Obby mas voc√™ √© uma bike üö≤| üáßüá∑ Vers√£o 1.0.0", 
    TabWidth = 160,
    Size = UDim2.fromOffset(390, 300),
    Theme = "Amethyst"
})

-- Criar aba Auto Farm
local Tabs = {
    autoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "map" })
}

-- Vari√°veis de controle
local teleporting = false -- Estado do alternador
local currentCheckpointIndex = 2 -- Iniciar do checkpoint 2

-- Fun√ß√£o para mover suavemente o jogador para uma posi√ß√£o
local function smoothMoveTo(character, destination, steps, delay)
    local startPosition = character.PrimaryPart.Position
    local stepSize = (destination - startPosition) / steps

    for i = 1, steps do
        local newPosition = startPosition + stepSize * i
        character:MoveTo(newPosition)
        wait(delay)
    end
end

-- Fun√ß√£o para teleportar entre checkpoints de 2 a 99 para Auto Zerar
local function teleportToNextCheckpoint()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    -- Obter o checkpoint atual
    local checkpoint = workspace.WorldMap.Checkpoints[tostring(currentCheckpointIndex)] and workspace.WorldMap.Checkpoints[tostring(currentCheckpointIndex)].Pole
    if checkpoint then
        character:MoveTo(checkpoint.Position) -- Move o personagem para o checkpoint
        currentCheckpointIndex = currentCheckpointIndex + 1 -- Avan√ßa para o pr√≥ximo checkpoint

        -- Para a teleporta√ß√£o se atingir o √∫ltimo checkpoint (99)
        if currentCheckpointIndex > 99 then
            teleporting = false -- Para o teleport
            print("Teleporta√ß√£o conclu√≠da ao atingir o √∫ltimo checkpoint.")
            currentCheckpointIndex = 2 -- Reseta o √≠ndice para reiniciar os checkpoints
        end
    else
        teleporting = false -- Para o teleport se o checkpoint n√£o existir
        print("Checkpoint n√£o encontrado: " .. tostring(currentCheckpointIndex))
    end
end

-- Alternador para ativar/desativar o Auto Zerar
local Toggle = Tabs.autoFarm:AddToggle("AutoFarmToggle", 
{
    Title = "Auto Zerar", 
    Description = "(Sem risco!).",
    Default = false,
    Callback = function(state)
        teleporting = state
        currentCheckpointIndex = 2 -- Reseta o √≠ndice ao ativar o alternador
        if teleporting then
            print("Toggle On - Iniciando Auto Zerar") -- Mensagem de ativa√ß√£o
            while teleporting do
                teleportToNextCheckpoint() -- Teleportar para o pr√≥ximo checkpoint
                wait(0.7) -- Espera 0.7 segundos entre teletransportes
            end
        else
            print("Toggle Off - Auto Zerar desativado") -- Mensagem de desativa√ß√£o
        end
    end 
})

-- Fun√ß√£o para teleportar entre checkpoints de 2 a 99 e suavemente para o RestartPortal
local function teleportForAutoFarm()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    -- Teleportar para os checkpoints de 2 a 99
    for i = 2, 99 do
        local checkpoint = workspace.WorldMap.Checkpoints[tostring(i)] and workspace.WorldMap.Checkpoints[tostring(i)].Pole
        if checkpoint then
            character:MoveTo(checkpoint.Position)
            wait(0.7) -- Espera 0.7 segundos entre checkpoints
        end
    end

    -- Suavemente teleportar para o centro do RestartPortal ap√≥s o checkpoint 99
    local restartPortal = workspace.WorldMap.RestartPortal["Meshes/IceysAssetPack_Cube.003 (1)"]
    if restartPortal then
        local portalPosition = restartPortal.Position - Vector3.new(0, restartPortal.Size.Y / 2, 0) -- Ajuste para o meio da pe√ßa, embaixo
        smoothMoveTo(character, portalPosition, 50, 0.1) -- Move o jogador em 50 etapas com 0.1 segundos entre elas
        wait(2) -- Espera 2 segundos no RestartPortal antes de continuar
    end

    -- Voltar para o in√≠cio (pode adicionar qualquer l√≥gica para reiniciar o ciclo)
    currentCheckpointIndex = 2
end

-- Alternador para ativar/desativar o Auto Farm com loop
local ToggleFarm = Tabs.autoFarm:AddToggle("AutoFarmToggleFarm", 
{
    Title = "Auto Farm", 
    Description = "Ele Vai Ficar Farmando.",
    Default = false,
    Callback = function(state)
        teleporting = state
        currentCheckpointIndex = 2 -- Reseta o √≠ndice ao ativar o alternador
        if teleporting then
            print("Toggle On - Iniciando Auto Farm") -- Mensagem de ativa√ß√£o
            while teleporting do
                teleportForAutoFarm() -- Teleporta atrav√©s dos checkpoints e RestartPortal
                wait(1) -- Espera 1 segundo entre ciclos
            end
        else
            print("Toggle Off - Auto Farm desativado") -- Mensagem de desativa√ß√£o
        end
    end 
})

-- Mostrar a janela da interface
Window:ShowWindow()