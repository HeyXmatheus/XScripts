-- Carregar biblioteca
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Aviso ao executar
Fluent:Notify({ Title = "executado!", Content = "executando com sucesso" })

local Window = Fluent:CreateWindow({
    Title = "XScript universal" .. Fluent.Version,
    TabWidth = 160, 
    Size = UDim2.fromOffset(580, 460), 
    Theme = "Amethyst"
})

local Tabs = {
    Main = Window:AddTab({ Title = "inicio" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Parágrafos 
Tabs.Main:AddParagraph({ Title = "XScript", Content = "versao beta" })

-- Botões 
Tabs.Main:AddButton({ Title = "pulo infinito", Callback = function() 
    local success, err = pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/HeyGyt/infjump/main/main"))()
    end)
    if not success then
        print("Erro ao carregar pulo infinito: " .. err)
    end
end })

Tabs.Main:AddButton({ Title = "Fly gui", Callback = function() 
    local success, err = pcall(function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/HeyXmatheus/XScripts/refs/heads/main/fly'))()
    end)
    if not success then
        print("Erro ao carregar Fly gui: " .. err)
    end
end })

Tabs.Main:AddButton({ Title = "Fling gui", Callback = function() 
    local success, err = pcall(function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/HeyXmatheus/XScripts/refs/heads/main/fling'))()
    end)
    if not success then
        print("Erro ao carregar Fling gui: " .. err)
    end
end })

Tabs.Main:AddButton({ Title = "Remover Lag e Texturas", Callback = function() 
    local success, err = pcall(function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        -- Desativar texturas
        for _, part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Material = Enum.Material.SmoothPlastic
                if part:FindFirstChildOfClass("Decal") then
                    part:FindFirstChildOfClass("Decal"):Destroy()
                end
                if part:FindFirstChildOfClass("Texture") then
                    part:FindFirstChildOfClass("Texture"):Destroy()
                end
            end
        end

        -- Desativar efeitos de partículas
        for _, effect in pairs(workspace:GetDescendants()) do
            if effect:IsA("ParticleEmitter") or effect:IsA("Trail") then
                effect.Enabled = false
            end
        end

        -- Desativar iluminação desnecessária
        game.Lighting.GlobalShadows = false
        game.Lighting.FogEnd = 9e9
        game.Lighting.Brightness = 0

        print("Lag e texturas removidos")
    end)
    if not success then
        print("Erro ao remover lag e texturas: " .. err)
    end
end })

-- God Mode 100% funcional
local godModeActive = false
Tabs.Main:AddToggle("GodModeToggle", 
{
    Title = "Ativar/Desativar God Mode", 
    Description = "Ativa ou desativa o God Mode",
    Default = false, 
    Callback = function(state)
        godModeActive = state
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        if godModeActive then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
            character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
                if character.Humanoid.Health < character.Humanoid.MaxHealth then
                    character.Humanoid.Health = character.Humanoid.MaxHealth
                end
            end)
            print("God Mode ativado")
            else
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
            print("God Mode desativado")
        end
    end 
})

-- Noclip funcional
local noclipActive = false
Tabs.Main:AddToggle("NoclipToggle", 
{
    Title = "Ativar/Desativar Noclip", 
    Description = "Ativa ou desativa o Noclip",
    Default = false, 
    Callback = function(state)
        noclipActive = state
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        if noclipActive then
            game:GetService("RunService").Stepped:Connect(function()
                if noclipActive then
                    for _, part in pairs(character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
            end)
        else
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end 
})

-- Auto Kill All funcional
local autoKillActive = false
Tabs.Main:AddToggle("AutoKillToggle", 
{
    Title = "Ativar/Desativar Auto Kill All", 
    Description = "Ativa ou desativa o Auto Kill All",
    Default = false, 
    Callback = function(state)
        autoKillActive = state

        local function followAndAttack()
            while autoKillActive do
                local player = game.Players.LocalPlayer
                local character = player.Character
                local sword = character:FindFirstChildOfClass("Tool")

                -- Equipar a espada automaticamente se não estiver equipada
                if not sword or not sword.Name:lower():find("sword") then
                    for _, tool in pairs(player.Backpack:GetChildren()) do
                        if tool:IsA("Tool") and tool.Name:lower():find("sword") then
                            character.Humanoid:EquipTool(tool)
                            sword = tool
                            break
                        end
                    end
                end

                if sword and sword.Name:lower():find("sword") then
                    for _, target in pairs(game.Players:GetPlayers()) do
                        if target ~= player then
                            local targetCharacter = target.Character
                            if targetCharacter and targetCharacter:FindFirstChild("Humanoid") then
                                -- Função para seguir o alvo e atacar
                                local function followTarget()
                                    while autoKillActive and targetCharacter.Humanoid.Health > 0 do
                                        -- Teleportar para trás do jogador alvo e olhar para ele
                                        local targetPosition = targetCharacter.PrimaryPart.Position
                                        local behindPosition = targetPosition - (targetCharacter.PrimaryPart.CFrame.LookVector * 3)
                                        character:SetPrimaryPartCFrame(CFrame.new(behindPosition, targetPosition))
                                        wait(0.09)
                                    end
                                end
                                followTarget()
                            end
                        end
                    end
                end
                wait(0.09)
            end
        end

        if autoKillActive then
            followAndAttack()
            print("Auto Kill All ativado")
        else
            print("Auto Kill All desativado")
        end
    end 
})
