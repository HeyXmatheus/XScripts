-- Carregar biblioteca
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Aviso ao executar
Fluent:Notify({ Title = "executado!", Content = "executando com sucesso" })

local Window = Fluent:CreateWindow({
    Title = "XScript universal" .. Fluent.Version,
    TabWidth = 160, 
    Size = UDim2.fromOffset(580, 460), 
    Theme = "Amethyst"
})

local Tabs = {
    Main = Window:AddTab({ Title = "inicio" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Parágrafos 
Tabs.Main:AddParagraph({ Title = "XScript", Content = "versao beta" })

-- Botões 
Tabs.Main:AddButton({ Title = "pulo infinito", Callback = function() 
    loadstring(game:HttpGet("https://raw.githubusercontent.com/HeyGyt/infjump/main/main"))()
end })

Tabs.Main:AddButton({ Title = "Fly gui", Callback = function() 
    loadstring(game:HttpGet('https://raw.githubusercontent.com/HeyXmatheus/XScripts/refs/heads/main/fly'))()
end })

Tabs.Main:AddButton({ Title = "Fling gui", Callback = function() 
    loadstring(game:HttpGet('https://raw.githubusercontent.com/HeyXmatheus/XScripts/refs/heads/main/fling'))()
end })

Tabs.Main:AddButton({ Title = "Remover Lag e Texturas", Callback = function() 
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    -- Desativar texturas
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Material = Enum.Material.SmoothPlastic
            if part:FindFirstChildOfClass("Decal") then
                part:FindFirstChildOfClass("Decal"):Destroy()
            end
            if part:FindFirstChildOfClass("Texture") then
                part:FindFirstChildOfClass("Texture"):Destroy()
            end
        end
    end

    -- Desativar efeitos de partículas
    for _, effect in pairs(workspace:GetDescendants()) do
        if effect:IsA("ParticleEmitter") or effect:IsA("Trail") then
            effect.Enabled = false
        end
    end

    -- Desativar iluminação desnecessária
    game.Lighting.GlobalShadows = false
    game.Lighting.FogEnd = 9e9
    game.Lighting.Brightness = 0

    print("Lag e texturas removidos")
end })

-- God Mode 100% funcional
local godModeActive = false
Tabs.Main:AddToggle("GodModeToggle", 
{
    Title = "Ativar/Desativar God Mode", 
    Description = "Ativa ou desativa o God Mode",
    Default = false, 
    Callback = function(state)
        godModeActive = state
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        if godModeActive then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
            character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
                if character.Humanoid.Health < character.Humanoid.MaxHealth then
                    character.Humanoid.Health = character.Humanoid.MaxHealth
                end
            end)
            print("God Mode ativado")
        else
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
            print("God Mode desativado")
        end
    end 
})

-- Noclip funcional
local noclipActive = false
Tabs.Main:AddToggle("NoclipToggle", 
{
    Title = "Ativar/Desativar Noclip", 
    Description = "Ativa ou desativa o Noclip",
    Default = false, 
    Callback = function(state)
        noclipActive = state
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        if noclipActive then
            game:GetService("RunService").Stepped:Connect(function()
                if noclipActive then
                    for _, part in pairs(character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
            end)
            print("Noclip ativado")
        else
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
            print("Noclip desativado")
        end
    end 
})

-- Variável para controlar o estado do ataque automático
local autoKill = false
Tabs.Main:AddToggle("AutoKillToggle", 
{
    Title = "Ativar/Desativar Auto Kill", 
    Description = "Ativa ou desativa o Auto Kill",
    Default = false, 
    Callback = function(state)
        autoKill = state
        if autoKill then
            followAndAttack()
        end
    end 
})

-- Função para seguir e atacar jogadores
local function followAndAttack()
    while autoKill do
        local player = game.Players.LocalPlayer
        local character = player.Character
        local sword = character:FindFirstChildOfClass("Tool")

        -- Equipar a espada automaticamente se não estiver equipada
        if not sword or not sword.Name:lower():find("sword") then
            for _, tool in pairs(player.Backpack:GetChildren()) do
                if tool:IsA("Tool") and tool.Name:lower():find("sword") then
                    character.Humanoid:EquipTool(tool)
                    sword = tool
                    break
                end
            end
        end

        if sword and sword.Name:lower():find("sword") then
            for _, target in pairs(game.Players:GetPlayers()) do
                if target ~= player then
                    local targetCharacter = target.Character
                    if targetCharacter and targetCharacter:FindFirstChild("Humanoid") then
                        -- Função para seguir o alvo e atacar
                        local function followTarget()
                            while autoKill and targetCharacter.Humanoid.Health > 0 do
                                -- Teleportar para trás do jogador alvo e olhar para ele
                                local targetPosition = targetCharacter.PrimaryPart.Position
                                local behindPosition = targetPosition - (targetCharacter.PrimaryPart.CFrame.LookVector * 3)
                                character:SetPrimaryPartCFrame(CFrame.new(behindPosition, targetPosition))
                                wait(0.09) -- Delay ajustado para 0.09 segundos
                            end
                        end
                        followTarget()
                    end
                end
            end
        end
    end
end

-- ESP com nome
local espActive = false
Tabs.Main:AddToggle("ESPToggle", 
{
    Title = "Ativar/Desativar ESP com Nome", 
    Description = "Ativa ou desativa o ESP com nome",
    Default = false, 
    Callback = function(state)
        espActive = state
        if espActive then
            for _, player in pairs(game.Players:GetPlayers()) do
                if player ~= game.Players.LocalPlayer then
                    createESP(player.Character)
                end
            end
            game.Players.PlayerAdded:Connect(function(player)
                if player ~= game.Players.LocalPlayer then
                    player.CharacterAdded:Connect(function(character)
                        createESP(character)
                    end)
                end
            end)
            print("ESP ativado")
        else
            for _, player in pairs(game.Players:GetPlayers()) do
                if player ~= game.Players.LocalPlayer then
                    removeESP(player.Character)
                end
            end
            print("ESP desativado")
        end
    end 
})

-- Função para criar ESP
local function createESP(character)
    if character and character:FindFirstChild("HumanoidRootPart") then
        local espBox = Instance.new("BoxHandleAdornment")
        espBox.Size = character.HumanoidRootPart.Size
        espBox.Adornee = character.HumanoidRootPart
        espBox.Color3 = Color3.new(1, 0, 0)
        espBox.AlwaysOnTop = true
        espBox.ZIndex = 10
        espBox.Transparency = 0.5
        espBox.Parent = character.HumanoidRootPart

        local nameTag = Instance.new("BillboardGui")
        nameTag.Adornee = character.HumanoidRootPart
        nameTag.Size = UDim2.new(0, 100, 0, 50)
        nameTag.StudsOffset = Vector3.new(0, 2, 0)
        nameTag.AlwaysOnTop = true

        local nameLabel = Instance.new("TextLabel")
        nameLabel.Parent = nameTag
        nameLabel.Size = UDim2.new(1, 0, 1, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = character.Name
        nameLabel.TextColor3 = Color3.new(1, 0, 0)
        nameLabel.TextScaled = true
        nameLabel.Font = Enum.Font.SourceSansBold
        nameLabel.TextStrokeTransparency = 0.5
        nameTag.Parent = character.HumanoidRootPart
    end
end

-- Função para remover ESP
local function removeESP(character)
    if character and character:FindFirstChild("HumanoidRootPart") then
        for _, child in pairs(character.HumanoidRootPart:GetChildren()) do
            if child:IsA("BoxHandleAdornment") or child:IsA("BillboardGui") then
                child:Destroy()
            end
        end
    end
end
