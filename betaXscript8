-- Carregar biblioteca
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Aviso ao executar
Fluent:Notify({ Title = "executado!", Content = "executando com sucesso" })

local Window = Fluent:CreateWindow({
    Title = "XScript universal" .. Fluent.Version,
    TabWidth = 160, 
    Size = UDim2.fromOffset(580, 460), 
    Theme = "Amethyst"
})

local Tabs = {
    Main = Window:AddTab({ Title = "inicio" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Parágrafos 
Tabs.Main:AddParagraph({ Title = "XScript", Content = "versao beta" })

-- Botões 
Tabs.Main:AddButton({ Title = "pulo infinito", Callback = function() 
    loadstring(game:HttpGet("https://raw.githubusercontent.com/HeyGyt/infjump/main/main"))()
end })

Tabs.Main:AddButton({ Title = "Fly gui", Callback = function() 
    loadstring(game:HttpGet('https://raw.githubusercontent.com/HeyXmatheus/XScripts/refs/heads/main/fly'))()
end })

Tabs.Main:AddButton({ Title = "Fling gui", Callback = function() 
    loadstring(game:HttpGet('https://raw.githubusercontent.com/HeyXmatheus/XScripts/refs/heads/main/fling'))()
end })

Tabs.Main:AddButton({ Title = "Remover Lag e Texturas", Callback = function() 
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    -- Desativar texturas
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Material = Enum.Material.SmoothPlastic
            if part:FindFirstChildOfClass("Decal") then
                part:FindFirstChildOfClass("Decal"):Destroy()
            end
            if part:FindFirstChildOfClass("Texture") then
                part:FindFirstChildOfClass("Texture"):Destroy()
            end
        end
    end

    -- Desativar efeitos de partículas
    for _, effect in pairs(workspace:GetDescendants()) do
        if effect:IsA("ParticleEmitter") or effect:IsA("Trail") then
            effect.Enabled = false
        end
    end

    -- Desativar iluminação desnecessária
    game.Lighting.GlobalShadows = false
    game.Lighting.FogEnd = 9e9
    game.Lighting.Brightness = 0

    print("Lag e texturas removidos")
end })

-- God Mode 100% funcional
local godModeActive = false
Tabs.Main:AddButton({ Title = "Ativar/Desativar God Mode", Callback = function() 
    godModeActive = not godModeActive
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")

    if godModeActive and humanoid then
        humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            if humanoid.Health < humanoid.MaxHealth then
                humanoid.Health = humanoid.MaxHealth
            end
        end)
        print("God Mode ativado")
    elseif not godModeActive and humanoid then
        humanoid.Health = humanoid.MaxHealth
        print("God Mode desativado")
    end
end })

-- Noclip funcional
local noclipActive = false
Tabs.Main:AddButton({ Title = "Ativar/Desativar Noclip", Callback = function() 
    noclipActive = not noclipActive
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    if noclipActive then
        game:GetService("RunService").Stepped:Connect(function()
            if noclipActive then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
        print("Noclip ativado")
    else
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
        print("Noclip desativado")
    end
end })

-- Variável para controlar o estado do ataque automático
local autoKill = false

-- Função para seguir e atacar jogadores
local function followAndAttack()
    while autoKill do
        local player = game.Players.LocalPlayer
        local character = player.Character
        local sword = character:FindFirstChildOfClass("Tool")

        -- Equipar a espada automaticamente se não estiver equipada
        if not sword or not sword.Name:lower():find("sword") then
            for _, tool in pairs(player.Backpack:GetChildren()) do
                if tool:IsA("Tool") and tool.Name:lower():find("sword") then
                    character.Humanoid:EquipTool(tool)
                    sword = tool
                    break
                end
            end
        end

        if sword and sword.Name:lower():find("sword") then
            for _, target in pairs(game.Players:GetPlayers()) do
                if target ~= player then
                    local targetCharacter = target.Character
                    if targetCharacter and targetCharacter:FindFirstChild("Humanoid") then
                        -- Função para seguir o alvo e atacar
                        local function followTarget()
                            while autoKill and targetCharacter.Humanoid.Health > 0 do
                                -- Teleportar para trás do jogador alvo e olhar para ele
                                local targetPosition = targetCharacter.PrimaryPart.Position
                                local behindPosition = targetPosition - (targetCharacter.PrimaryPart.CFrame.LookVector * 3)
                                character:SetPrimaryPartCFrame(CFrame.new(behindPosition, targetPosition))
                            end
                        end
                        followTarget()
                    end
                end
            end
        end
        wait(0.01) -- Delay reduzido para 0.01 segundos
    end
end

-- Botão para ativar/desativar o ataque automático
Tabs.Main:AddButton({ Title = "Ativar/Desativar Auto Kill", Callback = function() 
    autoKill = not autoKill
    if autoKill then
        followAndAttack()
    end
end })
