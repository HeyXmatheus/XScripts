-- Carregar biblioteca
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- Aviso ao executar
Fluent:Notify({ Title = "Executado!", Content = "Executando com sucesso" })
Fluent:Notify({ Title = "Servidor XScripts oficial discord!", Content = "https://discord.gg/qsYR297DR2" })

local Window = Fluent:CreateWindow({
    Title = "XScript universal" .. Fluent.Version,
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Theme = "Amethyst"
})

local Tabs = {
    Main = Window:AddTab({ Title = "Inicio" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Parágrafos 
Tabs.Main:AddParagraph({ Title = "XScript versão beta", Content = "https://discord.gg/qsYR297DR2" })

-- Variável para controle do auto kill
local autoKill = false

-- Função para criar bloco seguro
local function createSafeBlock(character)
    local block = Instance.new("Part")
    block.Size = Vector3.new(10, 1, 10) -- Tamanho do bloco
    block.Position = character.PrimaryPart.Position + Vector3.new(0, 5, 0) -- Acima do jogador
    block.Anchored = true
    block.Parent = workspace

    -- Criar paredes para o bloco
    for _, offset in ipairs({Vector3.new(5, 2.5, 0), Vector3.new(-5, 2.5, 0), Vector3.new(0, 2.5, 5), Vector3.new(0, 2.5, -5)}) do
        local wall = Instance.new("Part")
        wall.Size = Vector3.new(1, 5, 10) -- Tamanho da parede
        wall.Position = block.Position + offset
        wall.Anchored = true
        wall.Parent = workspace
    end
end

-- Função para seguir e atacar jogadores
local function followAndAttack()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local sword = character:FindFirstChildOfClass("Tool")

    -- Equipar a espada automaticamente se não estiver equipada
    if not sword or not sword.Name:lower():find("sword") then
        for _, tool in pairs(player.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name:lower():find("sword") then
                character.Humanoid:EquipTool(tool)
                sword = tool
                break
            end
        end
    end

    if sword and sword.Name:lower():find("sword") then
        for _, target in pairs(game.Players:GetPlayers()) do
            if target ~= player and target.Character then
                local targetCharacter = target.Character
                local humanoid = targetCharacter:FindFirstChildOfClass("Humanoid")

                if humanoid and not targetCharacter:FindFirstChild("ForceField") then
                    -- Função para seguir o alvo e atacar
                    local function followTarget()
                        while autoKill and humanoid.Health > 0 do
                            -- Teleportar para trás do jogador alvo e olhar para ele
                            local targetPosition = targetCharacter.PrimaryPart.Position
                            local behindPosition = targetPosition - (targetCharacter.PrimaryPart.CFrame.LookVector * 3)
                            character:SetPrimaryPartCFrame(CFrame.new(behindPosition, targetPosition))

                            -- Auto click para atacar sem delay
                            sword:Activate()
                            wait(0.01) -- Delay mínimo
                        end
                    end

                    -- Iniciar a função de seguir e atacar
                    followTarget()

                    -- Matar o jogador alvo
                    humanoid.Health = 0
                    wait(0.01) -- Esperar um pouco antes de ir para o próximo jogador
                end
            end
        end
    else
        print("Você precisa estar com uma espada equipada")
    end
end

-- Alternador para ativar/desativar o ataque automático
Tabs.Main:AddToggle("autoKill", {
    Title = "Auto Kill all (Sword)",
    Description = "Mate todos do servidor (necessita de espada)",
    Default = false,
    Callback = function(state)
        autoKill = state
        if autoKill then
            print("Auto Kill ativado")
            createSafeBlock(game.Players.LocalPlayer.Character) -- Criar bloco seguro ao ativar
            followAndAttack()
        else
            print("Auto Kill desativado")
        end
    end 
})

-- Botão para executar o Kill All manualmente
Tabs.Main:AddButton({ Title = "Kill All (Sword)", Callback = function() 
    local player = game.Players.LocalPlayer
    local character = player.Character
    local sword = character:FindFirstChildOfClass("Tool")

    -- Equipar a espada automaticamente se não estiver equipada
    if not sword or not sword.Name:lower():find("sword") then
        for _, tool in pairs(player.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.Name:lower():find("sword") then
                character.Humanoid:EquipTool(tool)
                sword = tool
                break
            end
        end
    end

    if sword and sword.Name:lower():find("sword") then
        for _, target in pairs(game.Players:GetPlayers()) do
            if target ~= player and target.Character and not target.Character:FindFirstChild("ForceField") then
                -- Matar o jogador alvo
                target.Character.Humanoid.Health = 0
                wait(0.01) -- Esperar um pouco antes de ir para o próximo jogador
            end
        end
        print("Todos os jogadores foram mortos")
    else
        print("Você precisa estar com uma espada equipada")
    end
end })

-- Variável para controle do God Mode
local godMode = false

-- Função para ativar/desativar o God Mode
local function toggleGodMode(state)
    local player = game.Players.LocalPlayer
    local character = player.Character
    local humanoid = character:FindFirstChild("Humanoid")

    if state then
        humanoid.MaxHealth = math.huge
        humanoid.Health = math.huge
        humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            if humanoid.Health < math.huge then
                humanoid.Health = math.huge
            end
        end)
        print("God Mode ativado")
    else
        humanoid.MaxHealth = 100
        humanoid.Health = 100
        print("God Mode desativado")
    end
end

-- Alternador para ativar/desativar o God Mode
Tabs.Main:AddToggle("godMode", {
    Title = "God Mode",
    Description = "Ativa ou desativa o God Mode (talvez não funcione, está em beta!)",
    Default = false,
    Callback = function(state)
        godMode = state
        toggleGodMode(godMode)
    end 
})

-- Variável para controlar o estado do noclip
local noclip = false

-- Função para alternar o estado do noclip
local function toggleNoclip(state)
    noclip = state
    if noclip then
        -- Desativar colisões
        for _, part in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        print("Noclip ativado")
    else
        -- Ativar colisões
        for _, part in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
        print("Noclip desativado")
    end
end

-- Alternador para ativar/desativar o noclip
Tabs.Main:AddToggle("noclip", {
    Title = "Noclip",
    Description = "Atravesse as paredes",
    Default = false,
    Callback = function(state)
        toggleNoclip(state)
    end 
})

-- Função para pulo infinito
Tabs.Main:AddButton({ Title = "Pulo Infinito", Callback = function() 
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.JumpPower = 100
    humanoid:GetPropertyChangedSignal("Jump") 
        :Connect(function()
            if humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    print("Pulo infinito ativado")
end })

-- Ajustar velocidade
Tabs.Main:AddSlider("speedSlider", {
    Title = "Ajustar Velocidade",
    Min = 16,
    Max = 200,
    Default = 16,
    Callback = function(value)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        character.Humanoid.WalkSpeed = value
        print("Velocidade ajustada para: " .. value)
    end
})

-- Ajustar pulo
Tabs.Main:AddSlider("jumpSlider", {
    Title = "Ajustar Pulo",
    Min = 50,
    Max = 200,
    Default = 50,
    Callback = function(value)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        character.Humanoid.JumpPower = value
        print("Pulo ajustado para: " .. value)
    end
})

-- Finalizando a interface
Window:Show()